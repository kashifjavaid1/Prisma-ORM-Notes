  

      1)  Add Data in Mondodb prisma ORM  send POST request
          --------------------------------------------------
         
     export const POST = async (request: NextRequest) => {
      try {
      const { title } = await request.json();
      const data = await prisma.todo.create({ data: { title } });
      return NextResponse.json({ data });
      } catch (error) {
      return NextResponse.json({ message: "error" });
     }
      };
 

       2) Get data in Mongodb Prisma ORM send GET request
         -----------------------------------------------

         export const GET = async () => {
          try {
         const response = await prisma.todo.findMany();
        return NextResponse.json({ response });
       } catch (error) {
       return NextResponse.json({ error });
    }
    };
    

   3) Delete data in Mongodb Prisma ORM send DELETE request
       id send in nexturl and delete data 
      -----------------------------------------------------
  
        export const DELETE = async (request: NextRequest) => {
        try {
        const id = await request.nextUrl.searchParams.get("id");
       if (!id) {
         return NextResponse.json({ message: "Invalid", status: 400 });
       }
       await prisma.todo.delete({
        where: {
        id: id,
       },
      });
     return NextResponse.json({ message: "success" });
     } catch (error) {
      return NextResponse.json({ error });
      }
     };


    4) Put data in Mondodb Prisma ORM Updata Data
       First folder create   forexample 
           
          [id].page.tsx
         ----------------
          
       Put data in Mondodb Prisma ORM 
        ------------------------------
      export const PUT = async (
       request: NextRequest,
       { params }: { params: { id: string } }
      ) => {
        try {
       const { id } = params;
       const { title } = await request.json();
       await prisma.todo.update({
        where: {
        id: id,
         },
         data: {
        title,
      },
    });
       return NextResponse.json({ message: "success" });
     } catch (error) {
       return NextResponse.json({ message: "error" });
      }
     };


    
     5 // GET DATA Update in Prisma ORM 

      export const GET = async (
     request: NextRequest,
    { params }: { params: { id: string } }
    ) => {
     try {
    const { id } = params;
    const title = await prisma.todo.findUnique({
      where: {
        id: id,
      },
    });
       return NextResponse.json({ title });
    } catch (error) {
    return NextResponse.json({ error });
    }
    };
 
     